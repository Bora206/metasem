\documentclass{article}
\usepackage[utf8]{inputenc} % for UTF-8/single quotes from sQuote()
\usepackage{graphicx}
\usepackage[authoryear,round]{natbib}
\usepackage{array}
%\usepackage{a4wide}

% \VignetteIndexEntry{metaSEM: Meta-Analysis using Structural Equation Modeling}
% \VignettePackage{metaSEM}
% \VignetteDepends{OpenMx}

\usepackage{color}
\usepackage[colorlinks=true,urlcolor=blue,citecolor=red,bookmarks=true]{hyperref}
\usepackage{url}
\usepackage{fullpage}
\title{\code{metaSEM}: Meta-Analysis using\\Structural Equation Modeling}
\author{\href{http://courses.nus.edu.sg/course/psycwlm/Internet/}{Mike W.-L. Cheung}\\National University of Singapore}
\newcommand{\code}[1]{{\tt #1}}
\SweaveOpts{echo=TRUE, keep.source=TRUE}

<<Settings, echo=FALSE>>=
options(prompt="R> ", continue="  ", width=70)
@ 

\begin{document}
\bibliographystyle{plainnat}
\maketitle

\section{Introduction} \label{sec:intro}
\code{metaSEM} is an \code{R} package that conducts univariate and multivariate meta-analysis using a structural equation modeling (SEM) approach \citep{Cheung:2008, Cheung:2011a} via the \href{http://openmx.psyc.virginia.edu/}{OpenMx} package \citep{OpenMx:2011}. It also implements the two-stage structural equation modeling (TSSEM) approach \citep{Cheung+Chan:2005, Cheung+Chan:2009} to conducting a meta-analytic structural equation modeling (MASEM) on correlation/covariance matrices. Main functions in this package are:

\begin{itemize}
\item \code{tssem1()}: It conducts the first stage analysis of TSSEM by pooling correlation/covariance matrices with a fixed-effets model.\item \code{tssem2()}: It conducts the second stage analysis of TSSEM by calling \code{wls()}.
\item \code{wls()}: It fits a correlation/covariance structure analysis with weighted least squares.
\item \code{meta()} and \code{reml()}: \code{meta()} conducts univariate and multivariate meta-analysis with maximum likelihood estimation method while \code{reml()} estimates the variance components of the random-effects with restricted (residual) maximum likelihood estimation method. Mixed-effects meta-analysis can be conducted by including study characteristics as predictors. Equality constraints on intercepts, regression coefficients and variance components can be imposed. 
\end{itemize}

Besides using Wald confidence intervals (CIs) based on z statistic, likelihood-based CIs on the parameter estimates may also be requested \citep{Cheung:2009a, Neale+Miller:1997}. Several generic functions such as, \code{anova()}, \code{coef()}, \code{vcov()}, \code{print()}, \code{summary()} and \code{plot()}, have also been implemented. The current version is \Sexpr{installed.packages()["metaSEM","Version"]}. Please send any bugs and comments to me at <mikewlcheung (at) nus.edu.sg>. 

\section{Installation} \label{sec:install}
First of all, you need \code{R} to run it. Since \code{metaSEM} uses \code{OpenMx} as the workhorse, \code{OpenMx} has to be installed first. To install \code{OpenMx}, run the following command inside an \code{R} session: 
\begin{Sinput}
source('http://openmx.psyc.virginia.edu/getOpenMx.R') 
\end{Sinput}
See \url{http://openmx.psyc.virginia.edu/installing-openmx} for the details on how to install \code{OpenMx}. Moreover, \code{metaSEM} also depends on the \code{ellipse} package that can be installed by the following command inside an \code{R} session:
\begin{Sinput}
install.packages('ellipse')
\end{Sinput}

\subsection{Windows platform} 
Download the \href{http://courses.nus.edu.sg/course/psycwlm/Internet/metaSEM/metaSEM\_\Sexpr{installed.packages()["metaSEM","Version"]}.zip}{Windows binary} of \code{metaSEM}. If the file is saved at d:\textbackslash. Run the following command inside an R session: 
\begin{Sinput}
install.packages(pkgs="d:/metaSEM_\Sexpr{installed.packages()["metaSEM","Version"]}.zip", repos=NULL) 
\end{Sinput}

Please note that d:\textbackslash{} in Windows is represented by either d:/ or d:\textbackslash\textbackslash{} in \code{R}. 

\subsection{Linux platform} 
Download the \href{http://courses.nus.edu.sg/course/psycwlm/Internet/metaSEM/metaSEM\_\Sexpr{installed.packages()["metaSEM","Version"]}.tar.gz}{source package} of \code{metaSEM}. Run the following command as Root inside a terminal: 
\begin{Sinput}
R CMD INSTALL metaSEM_\Sexpr{installed.packages()["metaSEM","Version"]}.tar.gz
\end{Sinput}

\subsection{Mac OS X platform} 
The current version does not contain binaries for Mac OS X. Mac OS X users may need to build from the \href{http://courses.nus.edu.sg/course/psycwlm/Internet/metaSEM/metaSEM\_\Sexpr{installed.packages()["metaSEM","Version"]}.tar.gz}{source}.

\section{Examples} \label{sec:examples}
\subsection{Two-stage SEM} 
An example from \cite{Cheung:2009b} was used to illustrate the two-stage structural equation modeling (TSSEM) procedure. \code{tssem1()} is used to pool the correlation matrices with a fixed-effects model in the first stage. \code{tssem2()} is then used to fit a structural model on the pooled correlation matrix with the inverse of its asymptotic covariance matrix as the weight matrix (see \citet{Cheung+Chan:2005, Cheung+Chan:2009} for the details).
<<Cheung2009, echo=TRUE>>=
## Load the metaSEM library 
library(metaSEM)

## Sample correlation matrices with missing values
Cheung09$data

## Sample sizes
Cheung09$n

## Stage 1: Analysis of correlation matrices
## A pooled correlation matrix will be estimated.
## tssem1() is the function for stage 1 analysis.
cor1 <- tssem1(Cheung09$data, Cheung09$n)
summary(cor1)

## Stage 2: Fit a three-factor CFA model on the pooled correlation matrix

## Create a matrix for factor correlations
## Values with "*" are free parameters
P1 <-  matrix(c(1,"0.2*p21*","0.2*p31",
                "0.2*p21",1,"0.2*p32",
                "0.2*p31","0.2*p32",1), ncol=3, nrow=3, byrow=TRUE)
## Convert it into a mxMatrix class
P1 <- as.mxMatrix(P1)

## Create a matrix for factor loadings
L1 <- matrix(c(rep(c("0.3*",0,0),3), 
               rep(c(0, "0.3*",0),4), 
               rep(c(0,0,"0.3*"),2)), ncol=3, nrow=9, byrow=TRUE)
## Convert it into a mxMatrix class
L1 <- as.mxMatrix(L1)

## impliedR1 = L1 %*% P1 %*% t(L1)
impliedR1 <- mxAlgebra(L1 %&% P1, name="impliedR1")

## tssem2() is the function for stage 2 analysis.
cor2 <- tssem2(cor1, impliedS=impliedR1, matrices=c(P1, L1))
summary(cor2)

## TSSEM by clusters
## Stage 1 analysis
digman1 <- tssem1(Digman97$data, Digman97$n, cluster=Digman97$cluster)
summary(digman1)

## Stage 2 analysis
P2 <- mxMatrix("Stand", ncol=2, nrow=2, value=.2, free=TRUE, name="P2")
L2 <- mxMatrix("Full", ncol=2, nrow=5, value=c(0,.3,.3,.3,0,.3,0,0,0,.3),
               free=c(FALSE,TRUE,TRUE,TRUE,FALSE,TRUE,FALSE,FALSE,FALSE,TRUE),
               name="L2")
## Model implied correlation matrix
impliedR2 <- mxAlgebra(L2 %&% P2, name="impliedR2")

digman2 <- tssem2(digman1, impliedS=impliedR2, matrices=c(P2, L2),
                  model.name="TSSEM2 Digman97")
summary(digman2)

@
\subsection{Reading External Data Files}
Data sets are most likely stored externally. \code{metaSEM} reads three types of data formats. The first type is full correlation/covariance matrices, for example, \href{http://courses.nus.edu.sg/course/psycwlm/Internet/metaSEM/fullmat.dat}{fullmat.dat} is the same as the built-in data set \code{Cheung09}. Missing values are represented by \code{NA} (the default option). Suppose you have saved it at d:\textbackslash fullmat.dat, you may read it by using the following command in \code{R}:

\begin{Sinput}
my.df <- readFullMat(file="d:/fullmat.dat")
\end{Sinput}

The second type is lower triangle correlation/covariance matrices, for example, \href{http://courses.nus.edu.sg/course/psycwlm/Internet/metaSEM/lowertriangle.dat}{lowertriangle.dat}. Missing values are represented by the strings NA. Suppose you have saved it at d:\textbackslash lowertriangle.dat, you may read it by using the following command in \code{R}:

\begin{Sinput}
my.df <- readLowTriMat(file = "d:/lowertriangle.dat", no.var = 9, na.strings="NA")
\end{Sinput}

The third type is vectors of correlation/covariance elements based on column vectorization. One row represents one study, for example, \href{http://courses.nus.edu.sg/course/psycwlm/Internet/metaSEM/stackvec.dat}{stackvec.dat}. Suppose you have saved it at d:\textbackslash stackvec.dat, you may read it by using the following \code{R} command:

\begin{Sinput}
my.df <- readStackVec(file="d:/stackvec.dat")
\end{Sinput}

\subsection{Analysis of Correlation/Covariance Structure with Weighted Least Squares}
Besides fitting a TSSEM, \code{wls()} may be used to fit a correlation/covariance structure with weighted least squares (WLS) as the estimation method. Likelihood-based CIs may also be calculated. The following example fits a one-factor CFA model on the correlation matrix with WLS estimation method.
<<WLS, echo=TRUE>>=

## Sample correlation matrix
R3 <- matrix(c(1.00, 0.22, 0.24, 0.18,
               0.22, 1.00, 0.30, 0.22,
               0.24, 0.30, 1.00, 0.24,
               0.18, 0.22, 0.24, 1.00), ncol=4, nrow=4)

## Sample size
n <- 1000

## Estimate the asymptotic covariance matrix of the sample correlation matrix
acovR3 <- asyCov(R3, n)

## P3: Factor variance is fixed at 1.0
P3 <- as.mxMatrix( matrix(1), name="P3")

## L3: Factor loadings
L3 <- as.mxMatrix( matrix( rep("0.3*", 4), nrow=4, ncol=1), name="L3" ) 

## Model implied correlation matrix
## Please note that error variances are not involved in correlation structure analysis
impliedR3 <- mxAlgebra(L3 %&% P3, name="impliedR3")

## wls() is the function to fitting correlation/covariance structure with WLS
wls.fit1 <- wls(S=R3, acovS=acovR3, n=n, impliedS=impliedR3, 
                matrices=c(P3, L3), cor.analysis=TRUE, intervals.type="LB")
summary(wls.fit1)
@

\subsection{Univariate and Multivariate Meta-Analysis} 
Other useful functions are \code{meta()} and \code{reml()}. They conduct fixed-, random-, and mixed-effects meta-analysis. Please note that there is no estimate on the fixed-effects when \code{reml()} is used. The followings are some examples.

<<meta_analysis, echo=TRUE>>=

## Random-effects meta-analysis with ML
summary( meta(y=yi, v=vi, data=Hox02) ) 

## Random-effects meta-analysis with REML
summary( VarComp <- reml(y=yi, v=vi, data=Hox02) ) 

## Extract the variance component
VarComp_REML <- matrix( coef(VarComp), ncol=1, nrow=1 )

## Meta-analysis by treating the variance component as fixed
summary( meta(y=yi, v=vi, data=Hox02, RE.constraints=VarComp_REML) )

## Fixed-effects meta-analysis
summary( meta(y=yi, v=vi, data=Hox02, RE.constraints=matrix(0, ncol=1, nrow=1),
              model.name="Fixed effects model") )

## Mixed-effects meta-analysis with "weeks" as a predictor 
## Request likelihood-based CI 
summary( meta(y=yi, v=vi, x=weeks, data=Hox02, intervals.type="LB") ) 

## Estimate variance components with REML
summary( reml(y=yi, v=vi, x=weeks, data=Hox02, intervals.type="LB") ) 

## Multivariate meta-analysis
summary( meta(y=cbind(PD, AL), v=cbind(var_PD, cov_PD_AL, var_AL), data=Berkey98) ) 


## Estimate variance components with REML
summary( reml(y=cbind(PD, AL), v=cbind(var_PD, cov_PD_AL, var_AL), data=Berkey98) ) 

## Multivariate meta-analysis with "publication year-1979" as a predictor 
summary( meta(y=cbind(PD, AL), v=cbind(var_PD, cov_PD_AL, var_AL),
              x=scale(pub_year, center=1979), data=Berkey98) ) 

## Estimate variance components with REML
summary( reml(y=cbind(PD, AL), v=cbind(var_PD, cov_PD_AL, var_AL),
              x=scale(pub_year, center=1979), data=Berkey98) )

## Multivariate meta-analysis with an equality constraint on the slopes 
summary( meta(y=cbind(PD, AL), v=cbind(var_PD, cov_PD_AL, var_AL),
              x=scale(pub_year, center=1979), data=Berkey98,
              coeff.constraints=matrix(c("0.3*Eq_slope", "0.3*Eq_slope"), nrow=2)) ) 
@

If multivariate meta-analysis is conducted, pairwise plots on the pooled effect sizes and their confidence ellipses may be requested. For example,
\begin{center}
<<plot_figure1, echo=TRUE, fig=TRUE>>=
Berkey98.ma <- meta(y=cbind(PD, AL), v=cbind(var_PD, cov_PD_AL, var_AL), data=Berkey98) 
plot(Berkey98.ma, main="Multivariate meta-analysis", axis.label=c("PD", "AL"))
@ 
\end{center}
By combining with the forest plots based on the \code{metafor} package, more information can be displayed.
<<plot_figure2, echo=TRUE, fig=TRUE>>=
library(metafor)
plot(Berkey98.ma, diag.panel=TRUE, main="Multivariate meta-analysis", axis.label=c("PD", "AL"))
forest( rma(yi=PD, vi=var_PD, data=Berkey98) )
title("Forest plot for PD")
forest( rma(yi=AL, vi=var_AL, data=Berkey98) )
title("Forest plot for AL")
@ 

\section{Acknowledgements} \label{sec:acknowledge}
This package cannot be written without \code{R} and \code{OpenMx}. Contributions by the R Development Core Team and the OpenMx Core Development Team are highly appreciated.

\bibliography{metaSEM}
\end{document}
